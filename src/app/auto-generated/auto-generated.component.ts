import { Component } from '@angular/core';
import { AccelerometerData } from './types/AcceleroMeterData.type';
import { CreateViewEventData } from 'tns-core-modules/ui/placeholder';

@Component({
  selector: 'app-auto-generated',
  templateUrl: './auto-generated.component.html',
  styleUrls: ['./auto-generated.component.css']
})
export class AutoGeneratedComponent {

  public accelerometerData: AccelerometerData;
  public canvas: globalAndroid.graphics.Canvas;

  constructor() {}
  
  public startAccelerometer(): void {
    const accelerometer = require('nativescript-accelerometer');
    accelerometer.startAccelerometerUpdates((data: AccelerometerData) => {
      this.accelerometerData = data;
      this.draw();
    }, { sensorDelay: 'ui' });
  }

  public draw(): void {
    let blueColor = new android.graphics.Paint();
    blueColor.setARGB(255, 255, 0, 0);
    blueColor.setAntiAlias(true);
    this.canvas.drawCircle(this.accelerometerData.x * 750 + 500 , this.accelerometerData.y * -750 + 500, 10, blueColor );
  }

  private drawBorder(){
    let blackColor = new android.graphics.Paint();
    blackColor.setARGB(255, 255, 255, 0);
    blackColor.setAntiAlias(true);
    this.canvas.drawRect(0,0, 1000,1000 , blackColor);
  }

  public InitCanvas(args: CreateViewEventData): void {
    let nativeView = new android.widget.ImageView(args.context);
    nativeView.setScaleType(android.widget.ImageView.ScaleType.FIT_XY);
    let bitmap = android.graphics.Bitmap.createBitmap(1000,1000, android.graphics.Bitmap.Config.ARGB_8888);
    this.canvas = new android.graphics.Canvas(bitmap);
    this.drawBorder();
    nativeView.setImageBitmap(bitmap);
    args.view = nativeView;
  }
}
